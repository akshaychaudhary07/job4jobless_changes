package com.demo.oragejobsite.controller;


import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;


import org.springframework.web.bind.annotation.RestController;

import com.demo.oragejobsite.util.TokenProvider;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

@RestController
@CrossOrigin(origins = "https://job4jobless.com")
public class AccessTokenController {
	
	@Value("${jwt.secret}")
	private String jwtSecretValue;
	
	// Inject the TokenProvider here
	private TokenProvider tokenProvider;

	public AccessTokenController(TokenProvider tokenProvider) {
		this.tokenProvider = tokenProvider;
	}
	 
	@CrossOrigin(origins = "https://job4jobless.com")
	@PostMapping("/checkAccessTokenValidity")
	public ResponseEntity<String> checkAccessTokenValidity(@RequestBody Map<String, String> requestMap) {
	    try {
	        String accessToken = requestMap.get("accessToken");

	        if (tokenProvider.isAccessTokenValid(accessToken)) {
	        	return ResponseEntity.ok().body("{\"status\":\"Access token is valid.\"}");

	        } else {
	            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Access token is invalid or has expired.");
	        }
	    } catch (Exception e) {
	        e.printStackTrace(); // Log the exception for debugging
	        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Internal server error.");
	    }
	}

	
	@CrossOrigin(origins = "https://job4jobless.com")
	@PostMapping("/refreshToken")
	

}
